

c++ : 使用二维数组,直接利用迭代公式进行求解
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
    vector<vector<int> > res(numRows);
    for (int i = 0; i < numRows; i++){
        res[i].resize(i + 1);
        res[i][0] = res[i][i] = 1;
        for (int j = 1; j < i; j++){
            res[i][j] = res[i-1][j] + res[i-1][j-1];
        }
    }
    return res;
    }
};

python: 和求解每一行类似，将每一行的结果加到list 中

class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        res = []
        row = [1]

        for i in range(1, numRows + 1):
            res.append(row)
            row = list(map(lambda x, y: x + y, [0] + row, row + [0]))
        return res
